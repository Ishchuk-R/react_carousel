{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","index","prevClick","prevIndex","props","images","frameSize","step","infinite","length","setState","nextClick","nextIndex","this","itemWidth","animationDuration","style","width","className","transform","transition","map","el","key","src","alt","onClick","type","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kOA2GeA,G,wNAtGbC,MAAQ,CACNC,MAAO,G,EAGTC,UAAY,WAAO,IAEbC,EAFY,EAC8B,EAAKC,MAA3CC,EADQ,EACRA,OAAQC,EADA,EACAA,UAAWC,EADX,EACWA,KADX,EACiBC,UAK7BL,EADuB,IAArB,EAAKH,MAAMC,MACDI,EAAOI,OAASH,EACnB,EAAKN,MAAMC,MAAQM,EAChB,EAEA,EAAKP,MAAMC,MAAQM,EAGjC,EAAKG,UAAS,SAAAV,GAAK,MAAK,CACtBC,MAAOE,QAIPA,EADE,EAAKH,MAAMC,MAAQM,GAES,IAArB,EAAKP,MAAMC,MADR,EAIA,EAAKD,MAAMC,MAAQM,EAGjC,EAAKG,UAAS,SAAAV,GAAK,MAAK,CACtBC,MAAOE,Q,EAKbQ,UAAY,WAAO,IAEbC,EAFY,EAC8B,EAAKR,MAA3CC,EADQ,EACRA,OAAQC,EADA,EACAA,UAAWC,EADX,EACWA,KADX,EACiBC,UAK7BI,EADE,EAAKZ,MAAMC,MAAQK,IAAcD,EAAOI,OAC9B,EACH,EAAKT,MAAMC,MAAQK,EAAYD,EAAOI,OAASF,EAC5CF,EAAOI,OAASH,EAEhB,EAAKN,MAAMC,MAAQM,EAGjC,EAAKG,UAAS,SAAAV,GAAK,MAAK,CACtBC,MAAOW,QAIPA,EADE,EAAKZ,MAAMC,MAAQK,EAAYD,EAAOI,OAASF,EACrCF,EAAOI,OAASH,EAEhB,EAAKN,MAAMC,MAAQM,EAGjC,EAAKG,UAAS,SAAAV,GAAK,MAAK,CACtBC,MAAOW,Q,uDAKH,IAAD,EACqDC,KAAKT,MAAzDC,EADD,EACCA,OAAQS,EADT,EACSA,UAAWR,EADpB,EACoBA,UAAWS,EAD/B,EAC+BA,kBAC9Bd,EAAUY,KAAKb,MAAfC,MAER,OACE,yBACEe,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAYR,EAAjB,OACdY,UAAU,YAEV,wBACEF,MAAO,CACLG,UAAU,eAAD,OAAiBlB,EAAQa,EAAzB,OACTM,WAAW,aAAD,OAAeL,EAAf,OAEZG,UAAU,kBAETb,EAAOgB,KAAI,SAAAC,GAAE,OACZ,wBAAIC,IAAKD,GAAI,yBAAKE,IAAKF,EAAIG,IAAI,eAKnC,4BAAQC,QAASb,KAAKX,UAAWyB,KAAK,UAAtC,QACA,4BAAQD,QAASb,KAAKF,UAAWgB,KAAK,UAAtC,a,GAxFeC,IAAMC,YCsCdC,E,4MApCb9B,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,uDAIM,IACAA,EAAWQ,KAAKb,MAAhBK,OAER,OACE,yBAAKa,UAAU,OAEb,6CAAmBb,EAAOI,OAA1B,WAEA,kBAAC,EAAD,CACEJ,OAAQA,EACRE,KAAM,EACND,UAAW,EACXQ,UAAW,IACXC,kBAAmB,IACnBP,UAAU,S,GA9BFoB,IAAMC,WCDxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b6b42095.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\nimport './Carousel.css';\n\nclass Carousel extends React.Component {\n  state = {\n    index: 0,\n  }\n\n  prevClick = () => {\n    const { images, frameSize, step, infinite } = this.props;\n    let prevIndex;\n\n    if (infinite) {\n      if (this.state.index === 0) {\n        prevIndex = images.length - frameSize;\n      } else if (this.state.index < step) {\n        prevIndex = 0;\n      } else {\n        prevIndex = this.state.index - step;\n      }\n\n      this.setState(state => ({\n        index: prevIndex,\n      }));\n    } else {\n      if (this.state.index < step) {\n        prevIndex = 0;\n      } else if (this.state.index === 0) {\n        prevIndex = 0;\n      } else {\n        prevIndex = this.state.index - step;\n      }\n\n      this.setState(state => ({\n        index: prevIndex,\n      }));\n    }\n  }\n\n  nextClick = () => {\n    const { images, frameSize, step, infinite } = this.props;\n    let nextIndex;\n\n    if (infinite) {\n      if (this.state.index + frameSize === images.length) {\n        nextIndex = 0;\n      } else if (this.state.index + frameSize > images.length - step) {\n        nextIndex = images.length - frameSize;\n      } else {\n        nextIndex = this.state.index + step;\n      }\n\n      this.setState(state => ({\n        index: nextIndex,\n      }));\n    } else {\n      if (this.state.index + frameSize > images.length - step) {\n        nextIndex = images.length - frameSize;\n      } else {\n        nextIndex = this.state.index + step;\n      }\n\n      this.setState(state => ({\n        index: nextIndex,\n      }));\n    }\n  }\n\n  render() {\n    const { images, itemWidth, frameSize, animationDuration } = this.props;\n    const { index } = this.state;\n\n    return (\n      <div\n        style={{ width: `${itemWidth * frameSize}px` }}\n        className=\"Carousel\"\n      >\n        <ul\n          style={{\n            transform: `translateX(-${index * itemWidth}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n          className=\"Carousel__list\"\n        >\n          {images.map(el => (\n            <li key={el}><img src={el} alt=\"index\" /></li>\n          ))\n          }\n        </ul>\n\n        <button onClick={this.prevClick} type=\"button\">Prev</button>\n        <button onClick={this.nextClick} type=\"button\">Next</button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropsTypes.arrayOf.isRequired,\n  frameSize: PropsTypes.number.isRequired,\n  step: PropsTypes.number.isRequired,\n  infinite: PropsTypes.bool.isRequired,\n  itemWidth: PropsTypes.number.isRequired,\n  animationDuration: PropsTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.css';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}